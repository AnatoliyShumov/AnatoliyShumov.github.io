{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as types from \"../actions/action-types\";\nconst initialState = {\n  contents: [],\n  value: ''\n};\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case types.SEARCH:\n      {\n        const {\n          value\n        } = action;\n        return _objectSpread({}, state, {\n          value\n        });\n      }\n\n    case types.GET_SEARCH_SUCCESS:\n      {\n        const data = action.payload;\n        console.log(state);\n        return _objectSpread({}, state, {\n          contents: [...data]\n        });\n      }\n\n    case types.CLEAR_INPUT_VALUE:\n      {\n        return _objectSpread({}, state, {\n          value: ''\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/pro/Desktop/test-task/next-js/with-redux-thunk-app/redux/reducers/search-reducer.js"],"names":["types","initialState","contents","value","reducer","state","action","type","SEARCH","GET_SEARCH_SUCCESS","data","payload","console","log","CLEAR_INPUT_VALUE"],"mappings":";;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,yBAAvB;AAGA,MAAMC,YAAY,GAAG;AAACC,EAAAA,QAAQ,EAAE,EAAX;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAArB;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAAGJ,YAAzB,EAAuCK,MAAvC,EAA+C;AAC1D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,KAAK,CAACQ,MAAX;AAAmB;AACf,cAAM;AAACL,UAAAA;AAAD,YAAUG,MAAhB;AACA,iCAAWD,KAAX;AAAkBF,UAAAA;AAAlB;AACH;;AACD,SAAKH,KAAK,CAACS,kBAAX;AAA+B;AAC5B,cAAMC,IAAI,GAAGJ,MAAM,CAACK,OAApB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACC,iCACOA,KADP;AAEIH,UAAAA,QAAQ,EAAE,CAAC,GAAGQ,IAAJ;AAFd;AAIH;;AACD,SAAKV,KAAK,CAACc,iBAAX;AAA8B;AAC1B,iCACOT,KADP;AAEIF,UAAAA,KAAK,EAAE;AAFX;AAIH;;AACD;AACI,aAAOE,KAAP;AApBR;AAsBH","sourcesContent":["import * as types from \"../actions/action-types\";\n\n\nconst initialState = {contents: [], value: ''};\n\nexport default function reducer(state = initialState, action) {\n    switch(action.type) {\n        case types.SEARCH: {\n            const {value} = action;\n            return {...state, value,};\n        }\n        case types.GET_SEARCH_SUCCESS: {\n           const data = action.payload;\n           console.log(state)\n            return {\n                ...state,\n                contents: [...data]\n           };\n        }\n        case types.CLEAR_INPUT_VALUE: {\n            return {\n                ...state,\n                value: ''\n            };\n        }\n        default:\n            return state;\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}