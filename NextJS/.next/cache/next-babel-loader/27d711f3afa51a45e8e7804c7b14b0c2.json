{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as types from \"../actions/action-types\";\nexport default function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.SHOW_FILM:\n      {\n        var payload = action.payload;\n        return _objectSpread({}, state, {}, payload);\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/pro/Desktop/test-task/next-js/with-redux-thunk-app/redux/reducers/film-reducer.js"],"names":["types","reducer","state","action","type","SHOW_FILM","payload"],"mappings":";;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,yBAAvB;AAGA,eAAe,SAASC,OAAT,GAAqC;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AAChD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKJ,KAAK,CAACK,SAAX;AAAsB;AAAA,YACXC,OADW,GACAH,MADA,CACXG,OADW;AAElB,iCAAWJ,KAAX,MAAqBI,OAArB;AACH;;AACD;AACI,aAAOJ,KAAP;AANR;AAQH","sourcesContent":["import * as types from \"../actions/action-types\";\n\n\nexport default function reducer(state = [], action) {\n    switch(action.type) {\n        case types.SHOW_FILM: {\n            const {payload} = action;\n            return {...state, ...payload};\n        }\n        default:\n            return state;\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}