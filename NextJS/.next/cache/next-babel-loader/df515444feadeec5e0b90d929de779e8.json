{"ast":null,"code":"import axios from 'axios';\nimport * as types from './action-types';\nimport history from '../../components/history/history'; // import Router from 'next/router';\n\nimport { useRouter } from 'next/router';\nexport const search = value => {\n  return {\n    type: types.SEARCH,\n    value\n  };\n};\nexport const searchSuccess = data => {\n  return {\n    type: types.GET_SEARCH_SUCCESS,\n    payload: data\n  };\n};\nexport const clearInputValue = () => {\n  return {\n    type: types.CLEAR_INPUT_VALUE\n  };\n};\nexport const ShowFilm = data => {\n  return {\n    type: types.SHOW_FILM,\n    payload: data\n  };\n};\nexport const withShowFilm = id => {\n  return dispatch => {\n    const queryToUrl = id;\n    const url = `http://api.tvmaze.com/shows/${queryToUrl}`;\n    axios.get(url).then(({\n      data\n    }) => {\n      if (data) {\n        dispatch(ShowFilm(data)); // const router = useRouter()\n        // router.push({pathname: `/filmDeskription`, query: {id}})\n        // Router.push({pathname: `/film`, query: {id}})\n        // console.log(history)\n      }\n    }).catch(err => {});\n  };\n};\nexport const withSearch = query => {\n  return dispatch => {\n    const queryToUrl = query;\n    const url = `http://api.tvmaze.com/search/shows?q=${queryToUrl}`;\n    axios.get(url).then(({\n      data\n    }) => {\n      if (data) {\n        dispatch(searchSuccess(data));\n        router.push({\n          pathname: `/film`,\n          query: {\n            id\n          }\n        });\n        console.log(history);\n      }\n    }).catch(err => {});\n  };\n};","map":{"version":3,"sources":["/Users/pro/Desktop/test-task/next-js/with-redux-thunk-app/redux/actions/actions.js"],"names":["axios","types","history","useRouter","search","value","type","SEARCH","searchSuccess","data","GET_SEARCH_SUCCESS","payload","clearInputValue","CLEAR_INPUT_VALUE","ShowFilm","SHOW_FILM","withShowFilm","id","dispatch","queryToUrl","url","get","then","catch","err","withSearch","query","router","push","pathname","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,gBAAvB;AACA,OAAOC,OAAP,MAAoB,kCAApB,C,CACA;;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAO,MAAOC,MAAM,GAAGC,KAAK,IAAI;AAC5B,SAAO;AAACC,IAAAA,IAAI,EAAEL,KAAK,CAACM,MAAb;AAAqBF,IAAAA;AAArB,GAAP;AACH,CAFM;AAGP,OAAO,MAAOG,aAAa,GAAGC,IAAI,IAAI;AAClC,SAAO;AAACH,IAAAA,IAAI,EAAEL,KAAK,CAACS,kBAAb;AAAiCC,IAAAA,OAAO,EAACF;AAAzC,GAAP;AACH,CAFM;AAIP,OAAO,MAAMG,eAAe,GAAG,MAAM;AACjC,SAAO;AAACN,IAAAA,IAAI,EAAEL,KAAK,CAACY;AAAb,GAAP;AACH,CAFM;AAIP,OAAO,MAAOC,QAAQ,GAAGL,IAAI,IAAI;AAC7B,SAAO;AAACH,IAAAA,IAAI,EAAEL,KAAK,CAACc,SAAb;AAAwBJ,IAAAA,OAAO,EAACF;AAAhC,GAAP;AACH,CAFM;AAIP,OAAO,MAAOO,YAAY,GAAGC,EAAE,IAAI;AAC/B,SAAQC,QAAD,IAAc;AACjB,UAAMC,UAAU,GAAGF,EAAnB;AACA,UAAMG,GAAG,GAAI,+BAA8BD,UAAW,EAAtD;AAEAnB,IAAAA,KAAK,CAACqB,GAAN,CAAUD,GAAV,EACKE,IADL,CACU,CAAC;AAACb,MAAAA;AAAD,KAAD,KAAY;AACd,UAAGA,IAAH,EAAS;AACLS,QAAAA,QAAQ,CAACJ,QAAQ,CAACL,IAAD,CAAT,CAAR,CADK,CAEL;AACA;AACA;AACA;AACH;AACJ,KATL,EAUKc,KAVL,CAUWC,GAAG,IAAI,CAEb,CAZL;AAaH,GAjBD;AAkBH,CAnBM;AAqBP,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;AACjC,SAAQR,QAAD,IAAc;AACjB,UAAMC,UAAU,GAAGO,KAAnB;AACA,UAAMN,GAAG,GAAI,wCAAuCD,UAAW,EAA/D;AAEAnB,IAAAA,KAAK,CAACqB,GAAN,CAAUD,GAAV,EACKE,IADL,CACU,CAAC;AAACb,MAAAA;AAAD,KAAD,KAAY;AACd,UAAGA,IAAH,EAAS;AACLS,QAAAA,QAAQ,CAACV,aAAa,CAACC,IAAD,CAAd,CAAR;AACAkB,QAAAA,MAAM,CAACC,IAAP,CAAY;AAACC,UAAAA,QAAQ,EAAG,OAAZ;AAAoBH,UAAAA,KAAK,EAAE;AAACT,YAAAA;AAAD;AAA3B,SAAZ;AACAa,QAAAA,OAAO,CAACC,GAAR,CAAY7B,OAAZ;AACH;AACJ,KAPL,EAQKqB,KARL,CAQWC,GAAG,IAAI,CAEb,CAVL;AAWH,GAfD;AAgBH,CAjBM","sourcesContent":["import axios from 'axios';\nimport * as types from './action-types';\nimport history from '../../components/history/history'\n// import Router from 'next/router';\nimport { useRouter } from 'next/router'\n\nexport const  search = value => {\n    return {type: types.SEARCH, value};\n}\nexport const  searchSuccess = data => {\n    return {type: types.GET_SEARCH_SUCCESS, payload:data};\n}\n\nexport const clearInputValue = () => {\n    return {type: types.CLEAR_INPUT_VALUE}\n}\n\nexport const  ShowFilm = data => {\n    return {type: types.SHOW_FILM, payload:data};\n}\n\nexport const  withShowFilm = id => {\n    return (dispatch) => {\n        const queryToUrl = id;\n        const url = `http://api.tvmaze.com/shows/${queryToUrl}`;\n\n        axios.get(url)\n            .then(({data}) => {\n                if(data) {\n                    dispatch(ShowFilm(data))\n                    // const router = useRouter()\n                    // router.push({pathname: `/filmDeskription`, query: {id}})\n                    // Router.push({pathname: `/film`, query: {id}})\n                    // console.log(history)\n                }\n            })\n            .catch(err => {\n\n            });\n    }\n}\n\nexport const withSearch = (query) => {\n    return (dispatch) => {\n        const queryToUrl = query;\n        const url = `http://api.tvmaze.com/search/shows?q=${queryToUrl}`;\n\n        axios.get(url)\n            .then(({data}) => {\n                if(data) {\n                    dispatch(searchSuccess(data))\n                    router.push({pathname: `/film`, query: {id}})\n                    console.log(history)\n                }\n            })\n            .catch(err => {\n\n            });\n    }\n};"]},"metadata":{},"sourceType":"module"}