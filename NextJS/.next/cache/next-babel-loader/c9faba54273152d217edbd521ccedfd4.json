{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as types from \"../actions/action-types\";\n\nconst exampleReducer = (state = [], action) => {\n  switch (action.type) {\n    case types.GET_COMMENT_SUCCESS:\n      const {\n        comment\n      } = action.payload;\n      return [...comment];\n\n    case types.GET_COMMENT_FAILURE:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: action.payload.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default exampleReducer;","map":{"version":3,"sources":["/Users/pro/Desktop/test-task/next-js/with-redux-thunk-app/redux/reducers/comment-reducer.js"],"names":["types","exampleReducer","state","action","type","GET_COMMENT_SUCCESS","comment","payload","GET_COMMENT_FAILURE","loading","error"],"mappings":";;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,yBAAvB;;AAEA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,KAAK,CAACK,mBAAX;AACI,YAAM;AAACC,QAAAA;AAAD,UAAYH,MAAM,CAACI,OAAzB;AAEA,aAAO,CAAC,GAAGD,OAAJ,CAAP;;AACJ,SAAKN,KAAK,CAACQ,mBAAX;AACI,+BACON,KADP;AAEIO,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,KAAK,EAAEP,MAAM,CAACI,OAAP,CAAeG;AAH1B;;AAKJ;AACI,aAAOR,KAAP;AAZR;AAcH,CAfD;;AAgBA,eAAeD,cAAf","sourcesContent":["\nimport * as types from \"../actions/action-types\";\n\nconst exampleReducer = (state = [], action) => {\n    switch (action.type) {\n        case types.GET_COMMENT_SUCCESS:\n            const {comment} = action.payload;\n\n            return [...comment];\n        case types.GET_COMMENT_FAILURE:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload.error\n            };\n        default:\n            return state;\n    }\n};\nexport default exampleReducer;"]},"metadata":{},"sourceType":"module"}